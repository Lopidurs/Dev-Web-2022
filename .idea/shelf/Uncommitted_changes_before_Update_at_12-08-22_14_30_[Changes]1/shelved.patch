Index: client/src/styles/Titre.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url(\"https://fonts.googleapis.com/css?family=Cormorant+SC\");\r\n\r\n.titre{\r\n    text-align: center;\r\n    margin-top: 20vh;\r\n    margin-bottom: 55vh;\r\n}\r\n.titre svg{\r\n    margin-top: 20px;\r\n    width: 150px;\r\n    height: 150px;\r\n    opacity: 0;\r\n    animation: 2s linear 2s apparition;\r\n    animation-fill-mode: forwards;\r\n}\r\n.titre h1{\r\n    font-family: \"Cormorant SC\",\"Water Brush\",sans-serif;\r\n    font-weight: bold;\r\n    font-size: 130px;\r\n    text-align: center;\r\n    color: #A4AA3C;\r\n}\r\n.rectangle{\r\n    width  : 80%;\r\n    height : 6px;\r\n    background-color: #A4AA3C;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 10px;\r\n    border-radius: 10px;\r\n    animation: 1.5s linear slidein;\r\n}\r\n\r\n@keyframes slidein {\r\n    from { transform: scaleX(0); }\r\n    to   { transform: scaleX(1); }\r\n}\r\n\r\n@keyframes apparition {\r\n    0% { opacity: 0; }\r\n    100%   { opacity: 1; }\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n    .titre h1{\r\n        font-size: 100px;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/styles/Titre.css b/client/src/styles/Titre.css
--- a/client/src/styles/Titre.css	
+++ b/client/src/styles/Titre.css	
@@ -14,7 +14,7 @@
     animation-fill-mode: forwards;
 }
 .titre h1{
-    font-family: "Cormorant SC","Water Brush",sans-serif;
+    font-family: "Cormorant SC",sans-serif;
     font-weight: bold;
     font-size: 130px;
     text-align: center;
Index: client/src/pages/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport '../styles/index.css'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport Cours from './Cours'\r\nimport Confection from './Confection'\r\nimport Propos from './Propos'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport Error from '../components/Error'\r\nimport Connexion from \"./Connexion\";\r\nimport Inscription from \"./Inscription\";\r\nimport Admin from \"./Admin\";\r\n\r\nfunction App(){\r\n    return(\r\n        <React.StrictMode>\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/confection\">\r\n                        <Confection />\r\n                    </Route>\r\n                    <Route path=\"/cours\">\r\n                        <Cours />\r\n                    </Route>\r\n                    <Route path=\"/propos\">\r\n                        <Propos />\r\n                    </Route>\r\n                    <Route path=\"/connexion\">\r\n                        <Connexion />\r\n                    </Route>\r\n                    <Route path=\"/inscription\">\r\n                        <Inscription />\r\n                    </Route>\r\n                    <Route path=\"/admin\">\r\n                        <Admin />\r\n                    </Route>\r\n                    <Route>\r\n                        <Error />\r\n                    </Route>\r\n                </Switch>\r\n                <Footer />\r\n            </Router>\r\n        </React.StrictMode>\r\n    )\r\n}\r\n\r\nexport default App
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pages/App.js b/client/src/pages/App.js
--- a/client/src/pages/App.js	
+++ b/client/src/pages/App.js	
@@ -11,6 +11,7 @@
 import Connexion from "./Connexion";
 import Inscription from "./Inscription";
 import Admin from "./Admin";
+import Temp from "./aSup";
 
 function App(){
     return(
@@ -38,6 +39,9 @@
                     </Route>
                     <Route path="/admin">
                         <Admin />
+                    </Route>
+                    <Route path="/god">
+                        <Temp />
                     </Route>
                     <Route>
                         <Error />
Index: client/src/pages/Admin.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport Admin_confection from \"../components/Admin_confection\";\r\nimport Admin_client from \"../components/Admin_client\";\r\n\r\nfunction Admin() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Admin_confection />\r\n            <Admin_client />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pages/Admin.js b/client/src/pages/Admin.js
--- a/client/src/pages/Admin.js	
+++ b/client/src/pages/Admin.js	
@@ -1,13 +1,17 @@
 import React from "react";
 import Admin_confection from "../components/Admin_confection";
 import Admin_client from "../components/Admin_client";
+import Error from "../components/Error";
+import Admin_cours from "../components/Admin_cours";
+
 
 function Admin() {
 
     return (
         <div className="container">
-            <Admin_confection />
-            <Admin_client />
+        {localStorage.getItem('role') == 1 ?
+            <div><Admin_cours /><Admin_confection /><Admin_client /></div>:
+                <div><Error /></div>}
         </div>
     )
 }
Index: client/src/styles/index.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url(\"https://fonts.googleapis.com/css2?family=Karla:wght@200;400&display=swap\");\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  --main-color: #A4AA3C;\r\n  --secondary-color: #DFD3C5;\r\n  --text-color: #806752;\r\n  --bg: white;\r\n}\r\n\r\nbody {\r\n  font-family: \"Karla\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",sans-serif,\"WaterBrush\";\r\n  overflow: overlay;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  --scrollbar-color: #00000000;\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\nh1 {\r\n  color: var(--main-color)\r\n}\r\nh2 {\r\n  color: var(--main-color)\r\n}\r\n.container {\r\n  max-width: 90%;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 1rem;\r\n  color: var(--text-color);\r\n  min-height: calc(100vh - 126px);\r\n}\r\n\r\narticle h1 {\r\n  margin: 1rem 0;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n  display: block;\r\n  width: 16px;\r\n}\r\n\r\n*::-webkit-scrollbar-button {\r\n  display: none;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n  background-color: #00000000;\r\n  margin-top: 60px;\r\n  margin-bottom: 70px;\r\n}\r\n\r\n*::-webkit-scrollbar-track-piece {\r\n  background-color: #00000000;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n  background-color: #00000000;\r\n  border: 5px solid transparent;\r\n  border-radius: 24px;\r\n  box-shadow: 4px 0px 0px 4px #00000040 inset;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb:hover {\r\n  background-color: #00000040;\r\n  border: 0px solid transparent;\r\n  box-shadow: none;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/styles/index.css b/client/src/styles/index.css
--- a/client/src/styles/index.css	
+++ b/client/src/styles/index.css	
@@ -12,7 +12,7 @@
 }
 
 body {
-  font-family: "Karla", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto",sans-serif,"WaterBrush";
+  font-family: "Karla", "Segoe UI", "Roboto",sans-serif;
   overflow: overlay;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
@@ -69,4 +69,21 @@
   background-color: #00000040;
   border: 0px solid transparent;
   box-shadow: none;
+}
+
+input {
+  width: 100%;
+  padding: 12px 20px;
+  margin: 8px 0;
+  box-sizing: border-box;
+  border: 3px solid var(--main-color);
+  border-radius: 30px;
+  -webkit-transition: 0.5s;
+  transition: 0.5s;
+  outline: none;
+}
+
+label{
+  font-size: 1.2rem;
+  margin-left: 20px;
 }
\ No newline at end of file
Index: client/src/components/Presentation_cours.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/components/Presentation_cours.js b/client/src/components/Presentation_cours.js
new file mode 100644
--- /dev/null	
+++ b/client/src/components/Presentation_cours.js	
@@ -0,0 +1,17 @@
+function presentation_cours() {
+    return (
+        <div>
+            <h1>Mes cours:</h1>
+            <div>Ut et fermentum neque. In quam orci, blandit a tincidunt id, consectetur in risus. Phasellus a sem nec
+                lorem mattis accumsan. Donec pulvinar egestas purus, et interdum mi feugiat a. Curabitur vel blandit
+                orci. Sed posuere, orci ut blandit finibus, massa arcu dapibus augue, nec fermentum justo tellus et
+                nibh. Praesent a dui scelerisque, facilisis diam at, faucibus elit. Integer condimentum neque a dolor
+                egestas, dignissim molestie quam blandit. Nulla ultrices, neque non sollicitudin auctor, enim diam
+                maximus massa, vitae fringilla elit dui et lectus. Suspendisse nisi mauris, sollicitudin at lorem ac,
+                ullamcorper placerat tortor. Donec mi arcu, aliquet in velit a, suscipit vehicula arcu.
+            </div>
+        </div>
+    )
+}
+
+export default presentation_cours()
\ No newline at end of file
Index: client/src/components/Liste_cours.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/components/Liste_cours.js b/client/src/components/Liste_cours.js
new file mode 100644
--- /dev/null	
+++ b/client/src/components/Liste_cours.js	
@@ -0,0 +1,42 @@
+import {useEffect, useState} from "react";
+import Spinner from "react-bootstrap/Spinner";
+import Card_cours from "./Card_cours";
+
+function Liste_cours(){
+    const [error, setError] = useState(null);
+    const [isLoaded, setIsLoaded] = useState(false);
+    const [items, setItems] = useState([]);
+
+    useEffect(() => {
+        fetch("https://api.example.com/items")
+            .then(res => res.json())
+            .then(
+                (result) => {
+                    setIsLoaded(true);
+                    setItems(result.items);
+                },
+                (error) => {
+                    setIsLoaded(true);
+                    setError(error);
+                }
+            )
+    }, [])
+
+    if (error) {
+        return <div><h1>Liste des cours :</h1>Erreur : {error.message}</div>;
+    } else if (!isLoaded) {
+        return <div><h1>Liste des cours :</h1><Spinner animation="border" /></div>;
+    } else {
+        return (
+            <div>
+                {items.map(item, index => {
+                    return (
+                        <Card_cours key={`${index} - ${item}`} data={item}/>
+                    )
+                })}
+            </div>
+        )
+
+}}
+
+export default Liste_cours
\ No newline at end of file
Index: client/src/components/Card_cours.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/components/Card_cours.js b/client/src/components/Card_cours.js
new file mode 100644
--- /dev/null	
+++ b/client/src/components/Card_cours.js	
@@ -0,0 +1,14 @@
+function Card_cours(data){
+    return(
+        <div className={"card-cours"}>
+            <h1>{data.titre}</h1>
+            <div>Le :{data.date}</div>
+            <div>De :{data.heureDebut}</div>
+            <div>A :{data.heureFin}</div>
+            <div>{data.description}</div>
+            <button className={"bouton_plein"}>S'inscrire au cours</button>
+        </div>
+    )
+}
+
+export default Card_cours
\ No newline at end of file
Index: client/src/tests/Admin_client.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Admin_client.test.js b/client/src/tests/Admin_client.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Admin_client.test.js	
@@ -0,0 +1,8 @@
+import Admin_client from "../components/Admin_client"
+import { render } from "@testing-library/react"
+
+describe('Admin_client', () => {
+    it('Should render without crash',async () => {
+        render(<Admin_client />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Admin_confection.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Admin_confection.test.js b/client/src/tests/Admin_confection.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Admin_confection.test.js	
@@ -0,0 +1,8 @@
+import Admin_confection from "../components/Admin_confection"
+import { render } from "@testing-library/react"
+
+describe('Admin_confection', () => {
+    it('Should render without crash',async () => {
+        render(<Admin_confection />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Admin_cours.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Admin_cours.test.js b/client/src/tests/Admin_cours.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Admin_cours.test.js	
@@ -0,0 +1,8 @@
+import Admin_cours from "../components/Admin_cours"
+import { render } from "@testing-library/react"
+
+describe('Admin_cours', () => {
+    it('Should render without crash',async () => {
+        render(<Admin_cours />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Card_confection.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Card_confection.test.js b/client/src/tests/Card_confection.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Card_confection.test.js	
@@ -0,0 +1,8 @@
+import Card_confecion from "../components/Card_confecion"
+import { render } from "@testing-library/react"
+
+describe('Card_confecion', () => {
+    it('Should render without crash',async () => {
+        render(<Card_confecion />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Card_cours.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Card_cours.test.js b/client/src/tests/Card_cours.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Card_cours.test.js	
@@ -0,0 +1,8 @@
+import Card_cours from "../components/Card_cours"
+import { render } from "@testing-library/react"
+
+describe('Card_cours', () => {
+    it('Should render without crash',async () => {
+        render(<Card_cours />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Liste_cours.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Liste_cours.test.js b/client/src/tests/Liste_cours.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Liste_cours.test.js	
@@ -0,0 +1,8 @@
+import Liste_cours from "../components/Liste_cours"
+import { render } from "@testing-library/react"
+
+describe('Liste_cours', () => {
+    it('Should render without crash',async () => {
+        render(<Liste_cours />)
+    })
+})
\ No newline at end of file
Index: client/src/tests/Admin.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/tests/Admin.test.js b/client/src/tests/Admin.test.js
new file mode 100644
--- /dev/null	
+++ b/client/src/tests/Admin.test.js	
@@ -0,0 +1,8 @@
+import Admin from "../pages/Admin"
+import { render } from "@testing-library/react"
+
+describe('Admin', () => {
+    it('Should render without crash',async () => {
+        render(<Admin />)
+    })
+})
\ No newline at end of file
Index: client/src/styles/connexion.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>input {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    box-sizing: border-box;\r\n    border: 3px solid var(--main-color);\r\n    border-radius: 30px;\r\n    -webkit-transition: 0.5s;\r\n    transition: 0.5s;\r\n    outline: none;\r\n}\r\ninput:focus {\r\n    border: 3px solid #7a802d;\r\n}\r\n.login-form {\r\n    margin-top: 60px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 20px;\r\n    grid-auto-rows: auto;\r\n    padding: 50px 40px;\r\n    background: #DFD3C5;\r\n    border-radius: 10px;\r\n}\r\n.login-form h1 {\r\n    margin: 0 0 24px 0;\r\n}\r\n.login-form input {\r\n    margin: 12px 0;\r\n}\r\n\r\nlabel{\r\n    font-size: 1.2rem;\r\n    margin-left: 20px;\r\n}\r\n\r\n.login-form h1{\r\n    text-align: center;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/styles/connexion.css b/client/src/styles/connexion.css
--- a/client/src/styles/connexion.css	
+++ b/client/src/styles/connexion.css	
@@ -1,14 +1,3 @@
-input {
-    width: 100%;
-    padding: 12px 20px;
-    margin: 8px 0;
-    box-sizing: border-box;
-    border: 3px solid var(--main-color);
-    border-radius: 30px;
-    -webkit-transition: 0.5s;
-    transition: 0.5s;
-    outline: none;
-}
 input:focus {
     border: 3px solid #7a802d;
 }
@@ -19,7 +8,7 @@
     grid-gap: 20px;
     grid-auto-rows: auto;
     padding: 50px 40px;
-    background: #DFD3C5;
+    background: var(--secondary-color);
     border-radius: 10px;
 }
 .login-form h1 {
@@ -29,11 +18,6 @@
     margin: 12px 0;
 }
 
-label{
-    font-size: 1.2rem;
-    margin-left: 20px;
-}
-
 .login-form h1{
     text-align: center;
 }
\ No newline at end of file
Index: client/src/pages/Connexion.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\"\r\nimport \"../styles/connexion.css\"\r\n\r\nfunction Connexion() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"login-form\">\r\n                <h1>Bienvenue</h1>\r\n                <div>\r\n                    <label htmlFor=\"e-mail\">E-mail</label>\r\n                    <input type=\"text\" name=\"e-mail\" placeholder=\"example@gmail.com\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Mot de passe</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"●●●●●●●●●\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <button type=\"submit\" className=\"bouton_plein\">Se Connecter</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Connexion
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pages/Connexion.js b/client/src/pages/Connexion.js
--- a/client/src/pages/Connexion.js	
+++ b/client/src/pages/Connexion.js	
@@ -1,10 +1,13 @@
-import React from "react"
-import "../styles/connexion.css"
+import React from "react";
+import "../styles/connexion.css";
+import axios from "axios";
+import {useHistory} from 'react-router-dom';
+
 
 function Connexion() {
     return (
         <div className="container">
-            <form className="login-form">
+            <form className="login-form" onSubmit={useSendForm}>
                 <h1>Bienvenue</h1>
                 <div>
                     <label htmlFor="e-mail">E-mail</label>
@@ -20,4 +23,34 @@
     )
 }
 
+function useSendForm(event) {
+    /*Cette fonction va envoyer les informations de l'utilisateur à la base de données et initier la session
+    PRE : l'evenement recu par le formulaire
+    POST : /
+    */
+        const user = {
+            email: event.target[0].value,
+            password: event.target[1].value
+        };
+        let history = useHistory();
+        event.preventDefault()
+
+        axios.post("/loginUser", user, {withCredentials: true})
+            .then(res => {
+                if (res.data !== "notok") {
+                    localStorage.clear();
+                    localStorage.setItem("id", res.data[0]._id);
+                    localStorage.setItem("lastname", res.data[0].nom);
+                    localStorage.setItem("firstname", res.data[0].prenom);
+                    localStorage.setItem("email", res.data[0].email);
+                    localStorage.setItem("role", res.data[0].role);
+                    console.log(res.data)
+                    history.push('/');
+                    window.location.reload()
+                } else {
+                    console.log('Mot de Passe incorrecte')
+                }
+            })
+            .catch(err => console.log(err));
+}
 export default Connexion
\ No newline at end of file
Index: client/src/pages/Inscription.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\nimport \"../styles/connexion.css\"\r\nimport \"../styles/inscripton.css\"\r\n\r\nfunction Inscription() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"register-form\">\r\n                <h1>Inscription</h1>\r\n                <div className={\"nom\"}>\r\n                    <label htmlFor=\"Nom\">Nom</label>\r\n                    <input type=\"text\" name=\"Nom\" placeholder=\"Dupond\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className={\"prenom\"}>\r\n                    <label htmlFor=\"Prénom\">Prénom</label>\r\n                    <input type=\"text\" name=\"Prénom\" placeholder=\"Bernard\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className={\"email\"}>\r\n                    <label htmlFor=\"e-mail\">E-mail</label>\r\n                    <input type=\"email\" name=\"e-mail\" placeholder=\"example@gmail.com\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <div className={\"phone\"}>\r\n                    <label htmlFor=\"phone\">Numéro de téléphone</label>\r\n                    <input type=\"tel\" name=\"e-mail\" placeholder=\"04** *** ***\" autoComplete=\"off\" pattern={\"[0-9]{4} [0-9]{3} [0-9]{3}\"} required/>\r\n                </div>\r\n                <div className={\"password\"}>\r\n                    <label htmlFor=\"password\">Mot de passe</label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"●●●●●●●●●\" autoComplete=\"off\"  required/>\r\n                </div>\r\n                <div className={\"verfication\"}>\r\n                    <label htmlFor=\"Vpassword\">Vérification du mot de passe</label>\r\n                    <input type=\"password\" name=\"Vpassword\" placeholder=\"●●●●●●●●●\" autoComplete=\"off\" required/>\r\n                </div>\r\n                <button type=\"submit\" className=\"bouton_plein\">S'inscrire</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inscription
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pages/Inscription.js b/client/src/pages/Inscription.js
--- a/client/src/pages/Inscription.js	
+++ b/client/src/pages/Inscription.js	
@@ -1,11 +1,30 @@
 import React from "react";
 import "../styles/connexion.css"
 import "../styles/inscripton.css"
+import axios from "axios";
 
 function Inscription() {
+
+    function useSendForm(event) {
+        if (event.target[4].value === event.target[5].value) {
+            const newUser = {
+                nom: event.target[0].value,
+                prenom: event.target[1].value,
+                email: event.target[2].value,
+                phone: event.target[3].value,
+                password: event.target[4].value
+            };
+            axios.post("/createUser", newUser, {withCredentials: true})
+            document.getElementById('succes').innerText = "Votre compte à été créer avec succès!";
+        } else {
+            event.preventDefault()
+            document.getElementById('erreur').innerText = "Vos deux mots de passe sont différents!";
+        }
+    }
+
     return (
         <div className="container">
-            <form className="register-form">
+            <form className="register-form" onSubmit={useSendForm}>
                 <h1>Inscription</h1>
                 <div className={"nom"}>
                     <label htmlFor="Nom">Nom</label>
@@ -21,20 +40,21 @@
                 </div>
                 <div className={"phone"}>
                     <label htmlFor="phone">Numéro de téléphone</label>
-                    <input type="tel" name="e-mail" placeholder="04** *** ***" autoComplete="off" pattern={"[0-9]{4} [0-9]{3} [0-9]{3}"} required/>
+                    <input type="tel" name="phone" placeholder="04** *** ***" autoComplete="off" pattern={"[0-9]{4} [0-9]{3} [0-9]{3}"} required/>
                 </div>
                 <div className={"password"}>
                     <label htmlFor="password">Mot de passe</label>
                     <input type="password" name="password" placeholder="●●●●●●●●●" autoComplete="off"  required/>
                 </div>
-                <div className={"verfication"}>
+                <div id={"verfication"} className={"verfication"}>
                     <label htmlFor="Vpassword">Vérification du mot de passe</label>
                     <input type="password" name="Vpassword" placeholder="●●●●●●●●●" autoComplete="off" required/>
+                    <small id={"erreur"}></small>
                 </div>
                 <button type="submit" className="bouton_plein">S'inscrire</button>
+                <h1 id={"succes"}></h1>
             </form>
         </div>
     )
 }
-
 export default Inscription
\ No newline at end of file
Index: client/src/styles/inscripton.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.register-form{\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 20px;\r\n    grid-auto-rows: auto;\r\n    padding: 50px 40px;\r\n    background: var(--secondary-color);\r\n    border-radius: 10px;\r\n    margin-top: 60px;\r\n}\r\n\r\n.register-form h1 {\r\n    margin: 0 0 24px 0;\r\n}\r\n.register-form input {\r\n    margin: 12px 0;\r\n}\r\n\r\n.register-form h1{\r\n    grid-column: span 2;\r\n    text-align: center;\r\n}\r\n.register-form .email{\r\n    grid-column: span 2;\r\n}\r\n\r\n.register-form .phone{\r\n    grid-column: span 2;\r\n}\r\n.register-form button{\r\n    grid-column: span 2;\r\n    margin-top: 10px;\r\n    padding: 13px 0 13px 0;\r\n}\r\n@media only screen and (max-width: 768px) {\r\n    .register-form{\r\n        grid-template-columns: 1fr;\r\n    }\r\n    .register-form h1{\r\n        grid-column: span 1;\r\n        text-align: center;\r\n    }\r\n    .register-form .email{\r\n        grid-column: span 1;\r\n    }\r\n    .register-form button{\r\n        grid-column: span 1;\r\n    }\r\n    .register-form .phone{\r\n        grid-column: span 1;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/styles/inscripton.css b/client/src/styles/inscripton.css
--- a/client/src/styles/inscripton.css	
+++ b/client/src/styles/inscripton.css	
@@ -9,6 +9,9 @@
     margin-top: 60px;
 }
 
+small{
+    margin-left: 20px;
+}
 .register-form h1 {
     margin: 0 0 24px 0;
 }
Index: client/src/styles/header.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import url(\"https://fonts.googleapis.com/css?family=Cormorant+SC\");\r\n\r\n.navigation {\r\n    height: 60px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    padding: 0.5rem 0;\r\n    background-color: var(--secondary-color);\r\n    color: var(--main-color);\r\n}\r\n\r\n.navigation .logo{\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-left: 15px;\r\n}\r\n.brand-name {\r\n    font-family: \"Cormorant SC\",sans-serif;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: var(--main-color);\r\n    font-size: 1.3rem;\r\n    margin-left: 1rem;\r\n}\r\n.groupe_button{\r\n    margin-left: auto;\r\n    margin-right: 80px;\r\n}\r\n\r\n.groupe_button button{\r\n    margin-left: 10px;\r\n}\r\n.navigation-menu {\r\nmargin-left: 3rem;\r\n}\r\n.navigation-menu ul {\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n.navigation-menu li {\r\nlist-style-type: none;\r\n    margin: 0 1rem;\r\n}\r\n.navigation-menu a {\r\n    display: block;\r\n    width: 100%;\r\n    color: var(--main-color);\r\n    text-decoration: none;\r\n}\r\n\r\n.navigation-menu a:hover {\r\n    color: var(--main-color);\r\n    text-decoration: none;\r\n}\r\n.hamburger {\r\nborder: 0;\r\n    height: 40px;\r\n    width: 40px;\r\n    padding: 0.5rem;\r\n    border-radius: 50%;\r\n    background-color: var(--main-color);\r\n    cursor: pointer;\r\n    transition: background-color 0.2s ease-in-out;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 25px;\r\n    transform: translateY(-50%);\r\n    display: none;\r\n}\r\n.hamburger:hover {\r\n    background-color: #7a802d;\r\n}\r\n.navigation-menu li .connexion-mobile{\r\n    display: none;\r\n}\r\n@media screen and (max-width: 768px) {\r\n    .hamburger {\r\n        display: block;\r\n    }\r\n}\r\n@media screen and (max-width: 768px) {\r\n    .navigation-menu ul {\r\n        display: none;\r\n    }\r\n}\r\n@media screen and (max-width: 768px) {\r\n    .navigation-menu ul {\r\n    position: absolute;\r\n        top: 60px;\r\n        left: 0;\r\n    flex-direction: column;\r\n    width: 100%;\r\n        height: calc(100vh - 77px);\r\n        background-color: var(--bg);\r\n        border-top: 1px solid black;\r\n    }\r\n    .navigation-menu li {\r\n    text-align: center;\r\n        margin: 0;\r\n    }\r\n    .navigation-menu li a {\r\n        color: black;\r\n    width: 100%;\r\n        padding: 1.5rem 0;\r\n    }\r\n    .navigation-menu li:hover {\r\n        background-color: #eee;\r\n    }\r\n    .navigation-menu button{\r\n        display: none;\r\n    }\r\n    .navigation-menu li .connexion-mobile{\r\n        display: block;\r\n    }\r\n    .groupe_button {\r\n        display: none;\r\n    }\r\n}\r\n@media screen and (max-width: 768px) {\r\n    .navigation-menu ul {\r\n        /* previous styles */\r\n        dipslay: none;\r\n    }\r\n}\r\n@media screen and (max-width: 768px) {\r\n    .navigation-menu.expanded ul {\r\n        display: block;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/styles/header.css b/client/src/styles/header.css
--- a/client/src/styles/header.css	
+++ b/client/src/styles/header.css	
@@ -24,6 +24,10 @@
     font-size: 1.3rem;
     margin-left: 1rem;
 }
+
+#btnDeco {
+    color: var(--secondary-color);
+}
 .groupe_button{
     margin-left: auto;
     margin-right: 80px;
Index: client/src/components/Form_confection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function Form_confection(){\r\n    return(\r\n        <form className=\"confection-form\">\r\n            <h1>Envoyer une demande pour une confection sur mesure</h1>\r\n            <div className={\"type-vêtement\"}>\r\n                <label htmlFor=\"type-vêtement\">Type de vêtements shouaiter</label>\r\n                <select name=\"type-vêtement\" required>\r\n                    <optgroup label={\"Homme\"}>\r\n                        <option value={\"veste\"}>Veste</option>\r\n                        <option value={\"gillet\"}>Gillet</option>\r\n                        <option value={\"pantalon\"}>Pantalon</option>\r\n                        <option value={\"chemise\"}>Chemise</option>\r\n                        <option value={\"3pièces\"}>Costume trois pièces</option>\r\n                        <option value={\"autre_homme\"}>Autre</option>\r\n                    </optgroup>\r\n                    <optgroup label={\"Femme\"}>\r\n                        <option value={\"robe\"}>Robe</option>\r\n                        <option value={\"jupe\"}>Jupe</option>\r\n                        <option value={\"chemisier\"}>Chemise/chemisier</option>\r\n                        <option value={\"autre_femme\"}>Autre</option>\r\n                    </optgroup>\r\n                    <optgroup label={\"enfant\"}>\r\n                        <option value={\"autre_enfant\"}>Autre</option>\r\n                    </optgroup>\r\n                </select>\r\n            </div>\r\n            <div className={\"occasion\"}>\r\n                <label htmlFor=\"occasion\">Pour quel occasion</label>\r\n                <select name=\"occasion\" required>\r\n                    <option value={\"marriage\"}>Mariage</option>\r\n                    <option value={\"soirée\"}>Soirée</option>\r\n                    <option value={\"déguisement\"}>Déguisement</option>\r\n                    <option value={\"travail\"}>Travail</option>\r\n                    <option value={\"normal\"}>Vie de tous les jours</option>\r\n                    <option value={\"autre\"}>Autre</option>\r\n                </select>\r\n            </div>\r\n            <div className={\"date\"}>\r\n                <label htmlFor=\"date\">Date butoire</label>\r\n                <input type=\"date\" name=\"date\"/>\r\n            </div>\r\n            <div className={\"commentaire\"}>\r\n                <label htmlFor=\"commentaire\">Commentaire suplémentaire</label>\r\n                <textarea name=\"commentaire\" rows={10} cols={50}/>\r\n            </div>\r\n            <div className={\"ajout-fichier\"}>\r\n                <label htmlFor=\"file-upload\" className={\"bouton_transparent\"}>Ajouter une photo\r\n                    <input type=\"file\" id=\"file-upload\" accept={\"image/png, image/jpeg\"}/>\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\" className=\"bouton_plein\">Envoyer votre demande</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form_confection
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/components/Form_confection.js b/client/src/components/Form_confection.js
--- a/client/src/components/Form_confection.js	
+++ b/client/src/components/Form_confection.js	
@@ -1,6 +1,26 @@
+import axios from "axios";
+
 function Form_confection(){
+    function sendFormConf(event) {
+        if (localStorage.getItem('email') !== null) {
+            const demandeConfection = {
+                type_vetement: event.target[0].value,
+                occasion: event.target[1].value,
+                date: event.target[2].value,
+                commentaire: event.target[3].value,
+                fichier: event.target[4].value,
+                email: localStorage.getItem('email')
+            };
+            axios.post("/demandeConfection", demandeConfection, {withCredentials: true})
+            document.getElementById('comConfection').innerText = "Votre demande à été prit en compte";
+        } else {
+            event.preventDefault()
+            document.getElementById('comConfection').innerText = "Veuillez vous connecter!";
+        }
+    }
+
     return(
-        <form className="confection-form">
+        <form className="confection-form" onSubmit={sendFormConf}>
             <h1>Envoyer une demande pour une confection sur mesure</h1>
             <div className={"type-vêtement"}>
                 <label htmlFor="type-vêtement">Type de vêtements shouaiter</label>
@@ -49,6 +69,7 @@
                 </label>
             </div>
             <button type="submit" className="bouton_plein">Envoyer votre demande</button>
+            <h1 id={"comConfection"}></h1>
         </form>
     )
 }
Index: client/src/pages/aSup.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pages/aSup.js b/client/src/pages/aSup.js
new file mode 100644
--- /dev/null	
+++ b/client/src/pages/aSup.js	
@@ -0,0 +1,6 @@
+function Temp(){
+    localStorage.setItem("role", 1);
+    console.log(localStorage.getItem('role'));
+}
+
+export default Temp
\ No newline at end of file
